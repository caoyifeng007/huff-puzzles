
/** 
 *  MAX_OF_ARRAY HUFF EXERCISE
 *  
 *  In this task, Given an abi encoded array of uint256, return its maximum value. Revert if the array is empty.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

#define function maxOfArray(uint256[]) payable returns(uint256)

#define macro MAIN() = takes(0) returns(0) {
   
    0x00 calldataload 0xe0 shr

    __FUNC_SIG(maxOfArray) eq maxOfArray jumpi

    0x20 0x00 revert

    maxOfArray:
        MAX_OF_ARRAY()
}

#define macro MAX_OF_ARRAY() = takes(0) returns(0) {
    
    // len
    0x24 calldataload

    // empty array rever
    dup1 0x00 eq error jumpi

    // max
    0x00

    // i
    0x00

    loop:
        // i == len ? return
        dup1 dup4 eq end jumpi
        // i * 0x20 + 0x44
        dup1 0x20 mul 0x44 add
        // load item
        calldataload
        // i++
        swap1 0x01 add
        // adjust stack order  [item, max]
        swap2 dup1 dup3 
        // item > max ?
        gt iszero non_switch jumpi

        // do switch, keep item, pop max
        pop swap1 loop jump

    non_switch:
        // adjust stack order  [i, max, len]
        swap1 pop swap1 loop jump
    
    end:
        swap1 0x00 mstore
        0x20 0x00 return

    error:
        0x20 0x00 revert

}